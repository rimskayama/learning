const students = [
  {
    name: "Bob",
    age: 22,
    isMarried: true,
    scores: 85,
  },
  {
    name: "Alex",
    age: 21,
    isMarried: true,
    scores: 90,
  },
  {
    name: "Nick",
    age: 20,
    isMarried: false,
    scores: 120,
  },
  {
    name: "John",
    age: 19,
    isMarried: false,
    scores: 100,
  },
  {
    name: "Helen",
    age: 20,
    isMarried: false,
    scores: 110,
  },
  {
    name: "Ann",
    age: 20,
    isMarried: false,
    scores: 105,
  },
];

const user = {
  name: "Bob",
  age: 23,
  isMarried: false,
  friends: ["Alex", "Nick", "John"],
};



//1. Поверхностная копия student


//2. Полная (глубокая) копия student


//3. Поверхностная копия students


//4*. Полная (глубокая) копия students


//Далее все преобразования выполняем не модифицируя исходный массив students

//5. Отсортируйте студентов по успеваемости (лучший идёт первым)

//5a. Отсортируйте студентов по алфавиту


//6. Сформируйте массив студентов, у которых 100 и более баллов


//6a.Сформируйте массив из трёх лучших студентов


//6b. Объедините массивы deepCopyStudents и topStudents так,
// чтоб сохранился порядок сортировки


//7. Сформируйте массив холостых студентов


//8. Сформируйте массив имён студентов

//8a. Сформируйте строку из имён студентов, разделённых
// - пробелом
// - запятой


//9. Добавьте всем студентам свойство "isStudent" со значением true


//10. Nick женился. Выполните преобразование массива students
// let studentsWithMarriedNick = students.map(st => st.name === "Nick" ? {...st, isMarried: true} : st);


//11. Найдите Студентку по имени Ann


//12. Найдите студента с самым высоким баллом


//12a. Найдите 2 студента с самым высоким баллом 



//13. Найдите сумму баллов всех студентов


// 14.Напишите функцию addFriends, которая принимает параметром массив students и возвращает новый массив, при этом добавляет в каждому студенту свойство .friends, значением которого является массив имён всех остальных студентов из массива, за исключением собственного имени студента. Т.е. в друзьях у Боба Боба быть не должно.


